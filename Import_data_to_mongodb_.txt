import json
from pymongo import MongoClient

# Define function to build nested json 
def make_nested_json(list_of_json):
    participant_name = list_of_json[0]['Participant']
    participant_ID = list_of_json[0]['Participant_ID']
    session_ID = list_of_json[0]['Session_ID']
    streams_and_data = [
        {
            'stream_type': list_of_json[0]['stream_type'], 
            'data': []
        }
    ]
    for i in range(len(list_of_json)):
        streams_in_dict = [a_dict["stream_type"] for a_dict in streams_and_data]
        indexed_stream_type = list_of_json[i]['stream_type']
        if indexed_stream_type in streams_in_dict:                   
            pass
        else:
            streams_and_data.append(
                {
                    'stream_type': indexed_stream_type,
                    'data': []
                }
            )
        streams_in_dict = [a_dict["stream_type"] for a_dict in streams_and_data]
        n = streams_in_dict.index(indexed_stream_type)
        streams_and_data[n]['data'].append(
            {
                'Value': list_of_json[i]['Value'],
                'dateTime': list_of_json[i]['dateTime_Unix']
            }
        )
    nested_json = {
        'Session_ID': session_ID,
        'Participant_ID': participant_ID,
        'Participant': participant_name,
        'Streams': streams_and_data
    } 
    return nested_json   

# Making Connection to mongodb local 
myclient = MongoClient("mongodb://localhost:27017/")
# database
db = myclient["Sensorlab"]
# Create or switch to collection
Collection = db["test_nestedJSON"]

with open('0_5e20c79f9efc42fc9c09b4443a6646de_1.json') as f:
    content = f.readlines()
file1 = []
for data in content:
    file1.append(json.loads(data))

nested_json_file1 = make_nested_json(file1)

if isinstance(nested_json_file1, list):
    Collection.insert_many(nested_json_file1)
else:
    Collection.insert_one(nested_json_file1)

print('Success')